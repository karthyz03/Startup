import 'package:flutter/material.dart';
import 'package:math_expressions/math_expressions.dart'; // For advanced evaluation

void main() {
  runApp(CalculatorApp());
}

class CalculatorApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Calculator',
      home: Calculator(),
      debugShowCheckedModeBanner: false,
    );
  }
}

class Calculator extends StatefulWidget {
  @override
  State<Calculator> createState() => _CalculatorState();
}

class _CalculatorState extends State<Calculator> {
  String result = '';

  void buttonPressed(String value) {
    setState(() {
      if (value == 'C') {
        result = '';
      } else if (value == '⌫') {
        // Backspace
        if (result.isNotEmpty) {
          result = result.substring(0, result.length - 1);
        }
      } else if (value == '=') {
        try {
          result = _evaluate(result);
        } catch (e) {
          result = 'Error';
        }
      } else if (value == 'x²') {
        result += '^2';
      } else {
        result += value;
      }
    });
  }

  String _evaluate(String expression) {
    try {
      // Replace custom operators with math_expressions syntax
      expression = expression.replaceAll('×', '*')
          .replaceAll('÷', '/')
          .replaceAll('%', '/100'); // percentage

      Parser p = Parser();
      Expression exp = p.parse(expression);
      ContextModel cm = ContextModel();
      double eval = exp.evaluate(EvaluationType.REAL, cm);
      return eval.toString();
    } catch (e) {
      return 'Error';
    }
  }

  Widget buildButton(String text) {
    return Expanded(
      child: ElevatedButton(
        onPressed: () => buttonPressed(text),
        child: Text(text, style: TextStyle(fontSize: 22)),
      ),
    );
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(title: Text('Calculator')),
      body: Column(
        children: [
          Expanded(
            child: Container(
              alignment: Alignment.bottomRight,
              padding: EdgeInsets.all(24),
              child: Text(result, style: TextStyle(fontSize: 48)),
            ),
          ),
          Row(children: ['C', '⌫', '(', ')'].map(buildButton).toList()),
          Row(children: ['7', '8', '9', '÷'].map(buildButton).toList()),
          Row(children: ['4', '5', '6', '×'].map(buildButton).toList()),
          Row(children: ['1', '2', '3', '-'].map(buildButton).toList()),
          Row(children: ['%', '0', '.', '+'].map(buildButton).toList()),
          Row(children: ['x²', '='].map(buildButton).toList()),
        ],
      ),
    );
  }
}
